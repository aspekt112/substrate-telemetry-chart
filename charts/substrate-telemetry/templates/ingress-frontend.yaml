{{- if and (.Values.frontend.enabled) (.Values.ingress.enabled) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "substrate-telemetry.frontendAppName" . }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    ingress.kubernetes.io/whitelist-source-range: {{ .Values.whiteListSourceRange }}
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
  - hosts:
      - {{ include "substrate-telemetry.frontendDomain" . }}
    secretName: {{ include "substrate-telemetry.tlsSecretName" . }}
  rules:
  - host: {{ include "substrate-telemetry.frontendDomain" . }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "substrate-telemetry.frontendSvcName" . }}
            port:
              number: {{ .Values.frontendPort }}
      - path: /feed/
        pathType: Prefix
        backend:
          service:
            name: {{ include "substrate-telemetry.backendSvcName" . }}-core
            port:
              number: {{ .Values.backendPortCore }}
{{- end }}
